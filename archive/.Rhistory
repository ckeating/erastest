1019,
508,
12823,
1564,
597,
9884,
955,
4249,
2663,
1021,
1831,
1711,
1619,
4485,
1750,
1621,
1407,
1327,
1448,
1221,
2774,
5439,
838,
620,
1027,
2369,
2290,
1459,
1324,
1249,
933,
7234,
3029,
5662,
1311,
1495,
1460,
1145,
1243,
6834,
1102,
977,
4496,
4442,
4152,
4148,
5201,
2860,
4176
1188,
586,
4681,
1676,
948,
1033,
1000,
1512,
926,
4035,
1065,
302,
2988,
1412,
1371,
1054,
961,
2387,
1920,
343,
1402,
1173,
1310,
877,
1329,
923,
1044
)
library(RODBC)
ch<-odbcConnect(dsn="PMITDB1P")
cn <- odbcDriverConnect(connection="Driver={SQL Server
Native Client 11.0};server=DECSUPDB1P;database=TPCH;
trusted_connection=yes;")
qry<-"SELECT  *
FROM    ynhh_daart.dbo.YNHH_SPF_HVC_MacLabRoom AS prov"
summary(tst)
library(psych)
mdstaff <- read.csv(file="c:/mdstaff.csv", header=TRUE, sep=",")
summary(mdstaff)
describe(mdstaff)
summary(mdstaff,maxsum=100)
con<-file("c:\test.log")
sink(con,append=TRUE)
con<-file("c:/test.log")
sink(con,append=TRUE)
summary(mdstaff,maxsum=100)
summary(mdstaff,maxsum=100)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
cn <- odbcDriverConnect(connection="Driver={SQL Server
Native Client 11.0};server=epicclarsqlp;database=RADB;
trusted_connection=yes;")
cn <- odbcDriverConnect(connection="Driver={SQL Server
Native Client 11.0};server=epicclarsqlp;database=RADB;
trusted_connection=yes;")
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"select * from radb.dbo.ERAS_Ortho;"
tst<-sqlQuery(ch,qry)
qry<-"select * from radb.dbo.ERAS_Ortho"
radb.dbo.ERAS_Ortho;
tst<-sqlQuery(ch,qry)
summary(tst)
library(psych)
describe(tst)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"select * from radb.dbo.ERAS_Ortho"
tst<-sqlQuery(ch,qry)
summary(tst)
library(psych)
qry<-"select * from #pharm"
tst<-sqlQuery(ch,qry)
summary(tst)
qry<-"select * from ##pharm"
tst<-sqlQuery(ch,qry)
summary(tst)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"select * from ##pharm"
tst<-sqlQuery(ch,qry)
summary(tst)
mdstaff <- read.csv(file="c:/mdstaff.csv", header=TRUE, sep=",")
summary(mdstaff,maxsum=100)
describe(mdstaff)
library(psych
describe(mdstaff)
describe(mdstaff)
con<-file("c:/test.log")
sink(con,append=TRUE)
mydata<-rnorm(100)
sd(mydata)
sd(x=mydata)
sd(x=mydata,na.rm=FALSE)
formals(plot)
lm(data=mydata, y~x, model=FALSE,1:100)
lm(y~x, mydata,1:100,model=FALSE)
f<-function(a,b=1,c=3,d=NULL)
{
}
f<-function(a,b) {
a^2
}
f(2)
myplot<-function(x,y,type="l",...){
plot(x,y,type=type,...)
}
x=rnorm(100)
y=rnorm(100)
myplot(x=x,y=y)
formals(myplot)
args(myplot)
cat("craig","is","awesome",se="|")
sink(cat)
cube<-make.power(3)
cube(3)
ls(environment(cube))
p <- par(mfrow = c(2, 2))
hist(islands)
utils::str(hist(islands, col = "gray", labels = TRUE))
hist(sqrt(islands), breaks = 12, col = "lightblue", border = "pink")
r <- hist(sqrt(islands), breaks = c(4*0:5, 10*3:5, 70, 100, 140),
col = "blue1")
text(r$mids, r$density, r$counts, adj = c(.5, -.5), col = "blue3")
sapply(r[2:3], sum)
sum(r$density * diff(r$breaks)) # == 1
lines(r, lty = 3, border = "purple") # -> lines.histogram(*)
par(op)
value = 1:5)
data <- data.frame(
name = c("Alan", "Joe", "Tina", "Alan", "Suzan"),
value = 1:5)
filter(data, name == "Alan")
install.packages("dplyr")
library("dplyr", lib.loc="C:/Program Files/R/R-3.0.2/library")
filter(data, name == "Alan")
select(data,name)
view(data)
data
View(data)
summary(data)
data
data()
summary(Titanic)
mean(rnorm(1000,10,3))
mean(rnorm(1000,10,3))
?rnorm
rnorm(1000,10,3)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"select * from radb.dbo.eras_ortho"
tst<-sqlQuery(ch,qry)
summary(tst)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"select * from radb.dbo.eras_ortho"
tst<-sqlQuery(ch,qry)
str(tst)
summary(tst)
tstfact<-sqlQuery(ch,"select * from radb.dbo.YNHH_IRTAT_Dim ")
summary(tstfact)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"select * from radb.dbo.eras_ortho"
tst<-sqlQuery(ch,qry)
summary(tst)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"select * from RADB.dbo.CRD_ERASOrtho_Cases"
tst<-sqlQuery(ch,qry)
summary(tst)
library(psych)
describe(tst)
str(test.all)
dim(test)
dim(tst)
str(tst)
qry2<-"select * from radb.dbo.ERAS_GIall"
tst2<-sqlQuery(ch,qry2)
summary(tst2)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
tstfact<-sqlQuery(ch,"SELECT * FROM radb.dbo.ERAS_CaseFact AS ecf ")
summary(tstfact)
summary(tstfact$CASECLASS_DESCR)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"SELECT * FROM radb.dbo.CRD_ERASOrtho_EncDim_vw"
tst<-sqlQuery(ch,qry)
summary(tst)
install.packages("epicalc")
library("epicalc", lib.loc="C:/Program Files/R/R-3.0.2/library")
codebook(tst)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
tstfact<-sqlQuery(ch,"select * from  ##irord")
summary(tstfact)
summary(cars)
output: pdf_document
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"select * from radb.dbo.eras_ortho"
tst<-sqlQuery(ch,qry)
summary(tst)
qry<-"select * from radb.dbo.CRD_ERASOrtho_Cases AS ceoc"
tst<-sqlQuery(ch,qry)
summary(tst)
str(tst)
install.packages("swirl")
swirl()
swirl
library("swirl", lib.loc="C:/Program Files/R/R-3.0.2/library")
swirl()
5+7
swirl())
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
NOT(5!=7)
!5==7
F & F
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
sessionInfo()
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
#cn <- odbcDriverConnect(connection="Driver={SQL Server
#Native Client 11.0};server=epicclarsqlp;database=RADB;
#trusted_connection=yes;")
qry<-"select * from ##los"
summary(tst)
tst<-sqlQuery(ch,qry)
summary(tst)
boxplot(tst$LOS_days)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"Select * from RADB.dbo.CRD_ERAS_Case_BHGYN"
tst<-sqlQuery(ch,qry)
str(tst)
summary(tst)
summary(tst$Surgery_Patient_Class)
table(tst$Surgery_Patient_Class)
View(table(tst$Surgery_Patient_Class))
summary(tst)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"Select * from radb.dbo.CRD_HF"
summary(tst)
str(tst)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"Select * from radb.dbo.CRD_HF"
HF_dataframe<-sqlQuery(ch,qry)
str(HF_dataframe)
str(HF_dataframe)
summary(tst)
str(HF_dataframe)
boxplot(tst$LOS_days,horizontal = TRUE)
table(c(tst$pat_enc_csn_id))
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"Select * from radb.dbo.CRD_HF"
tst<-sqlQuery(ch,qry)
summary(tst)
table(c(tst$pat_enc_csn_id))
length(unique(tst$pat_enc_csn_id))
boxplot(tst$LOS_days,horizontal = TRUE)
install.packages("swirl")
install.packages("RODBC")
library(RODBC)
library(RODBC)
install.packages("RODBC")
library(RODBC)
qry<-"select * from radb.dbo.vw_IRTAT_casefact"
tst<-sqlQuery(ch,qry)
summary(tst)
ch<-odbcConnect(dsn="Clarity")
#cn <- odbcDriverConnect(connection="Driver={SQL Server
#Native Client 11.0};server=epicclarsqlp;database=RADB;
#trusted_connection=yes;")
qry<-"select * from radb.dbo.crd_IRTAT_casefact"
tst<-sqlQuery(ch,qry)
summary(tst)
summary(tst)
losds=subset(tst,tst$VISIT_PATIENT_CLASS=="Inpatient")
qry<-"select * from radb.dbo.vw_IRTAT_EncLOS"
irtat<-sqlQuery(ch,qry)
summary(irtat)
str(irtat)
median(losds$los)
median(irtat$LOS_days)
irtat$HOSP_DISCH_TIME$year
cut(irtat$HOSP_DISCH_TIME,"year")
year(irtat$HOSP_DISCH_TIME("year")
year(irtat$HOSP_DISCH_TIME)
year(irtat$HOSP_DISCH_TIME)
getyear(irtat$HOSP_DISCH_TIME)
str(losds)
install.packages("lubridate")
year(irtat$HOSP_DISCH_TIME)
irtat$HOSP_DISCH_TIME$year
yr<-$HOSP_DISCH_TIME$year
yr<-irtat$HOSP_DISCH_TIME
yr
yr$year
irtat$disch_dt=as.date(irtat$HOSP_DISCH_TIME)
irtat$disch_dt=as.Date(irtat$HOSP_DISCH_TIME)
irtat$disch_dt$year
year(irtat$disch_dt)
format(irtat$HOSP_DISCH_TIME,"%Y")
as.numeric(format(irtat$HOSP_DISCH_TIME,"%Y"))
irtat$year=as.numeric(format(irtat$HOSP_DISCH_TIME,"%Y"))
sapply(irtat$LOS_days,irtat$year,median)
sapply(irtat$LOS_days,as.factor(irtat$year),median)
sapply(irtat$LOS_days,as.character(irtat$year),median)
boxplot(irtat$LOS_days,irtat$year)
boxplot,irtat$year,irtat$LOS_days)
boxplot(irtat$year,irtat$LOS_days)
boxplot(irtat$LOS_days,irtat$year)
boxplot(irtat$LOS_days)
qry<-"
SELECT      DISTINCT AdmissionCSN AS pat_enc_csn_id ,
LOS_days = DATEDIFF(DAY, f.HOSP_ADMSN_TIME, f.HOSP_DISCH_TIME),
VISIT_PATIENT_CLASS
FROM    RADB.dbo.CRD_IRTAT_CaseFact AS f"
irtat<-sqlQuery(ch,qry)
summary(irtat)
tapply(irtat$LOS_days,irtat$VISIT_PATIENT_CLASS,median)
tapply(irtat$LOS_days,irtat$VISIT_PATIENT_CLASS,median,is.na=TRUE)
tapply(irtat$LOS_days,irtat$VISIT_PATIENT_CLASS,median, na.rm=TRUE)
tapply(irtat$LOS_days,irtat$VISIT_PATIENT_CLASS,mean, na.rm=TRUE)
setwd("C:/Users/Craig/Dropbox/edgedata")
stevens=read.csv("stevens.csv")
setwd("C:/edgedata")
stevens=read.csv("stevens.csv")
str(stevens)
library(ROCR)
library(caTools)
library(rpart)
library(rpart.plot)
library(caret)
library(e1071)
library(randomForest)
set.seed(3000)
spl=sample.split(stevens$Reverse,SplitRatio = .70)
Train=subset(stevens,spl==TRUE)
Test=subset(stevens,spl==FALSE)
StevensTree=rpart(Reverse ~ Circuit+ Issue + Petitioner + Respondent+ LowerCourt + Unconst,data=Train,
method = "class",minbucket=25)
prp(StevensTree)
PredictCart=predict(StevensTree,newdata=Test,type="class")
table(Test$Reverse,PredictCart)
(41+71)/(41+36+22+71)
PredictROC=predict(StevensTree,newdata=Test)
PredictROC
pred=prediction(PredictROC[,2],Test$Reverse)
perf=performance(pred,"tpr","fpr")
plot(perf)
as.numeric(performance(pred, "auc")@y.values)
StevensTree=rpart(Reverse ~ Circuit+ Issue + Petitioner + Respondent+ LowerCourt + Unconst,data=Train,
method = "class",minbucket=100)
prp(StevensTree)
PredictCart=predict(StevensTree,newdata=Test,type="class")
table(Test$Reverse,PredictCart)
StevensForest=randomForest(Reverse ~ Circuit+ Issue + Petitioner + Respondent+ LowerCourt + Unconst,data=Train,nodesize=25,ntree=200)
Train$Reverse=as.factor(Train$Reverse)
Test$Reverse=as.factor(Test$Reverse)
set.seed(200)
StevensForest=randomForest(Reverse ~ Circuit+ Issue + Petitioner + Respondent+ LowerCourt + Unconst,data=Train,nodesize=25,ntree=200)
PredictForest=predict(StevensForest,newdata=Test)
table(Test$Reverse,PredictForest)
(44+76)/(44+76+17+33)
numFolds=trainControl(method="cv", number=10)
cpGrid=expand.grid(.cp=seq(0.01,0.5,0.01))
train(Reverse ~ Circuit+ Issue + Petitioner + Respondent+ LowerCourt + Unconst,data=Train,method="rpart",trControl=numFolds,tuneGrid=cpGrid)
StevensTreeCV=rpart(Reverse ~ Circuit+ Issue + Petitioner + Respondent+ LowerCourt + Unconst,data=Train,method="class",cp=0.19)
PredictCV=predict(StevensTreeCV,newdata=Test,type="class")
table(Test$Reverse,PredictCV)
(59+64)/(59+64+18+29)
prp(StevensTreeCV)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"Select * from RADB.dbo.CRD_ERAS_Case_GHGI"
tst<-sqlQuery(ch,qry)
summary(tst)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"Select * from RADB.dbo.CRD_ERAS_Case_GHGI"
tst<-sqlQuery(ch,qry)
str(tst)
summary(tst)
encqry<= "SELECT * FROM RADB.dbo.CRD_ERAS_EncDim_GHGI"
enc=sqlQuery(ch,encqry)
encqry<= "SELECT * FROM RADB.dbo.CRD_ERAS_EncDim_GHGI"
encqry<- "SELECT * FROM RADB.dbo.CRD_ERAS_EncDim_GHGI"
enc=sqlQuery(ch,encqry)
summary(enc)
pdf("encounter.pdf")
summary(enc)
setwd("\\ynhh\root\Shared2\DSSFILES\keating\Projects\.ERAS GH")
setwd("//ynhh/root/Shared2/DSSFILES/keating/Projects/.ERAS GH/code")
pdf("encounter.pdf")
summary(enc)
dev.off
dev.off ("encounter.pdf")
dev.off()
dev.off()
dev.off()
install.packages("RODBC")
library(RODBC)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"
SELECT * from
(SELECT  rid = ROW_NUMBER() OVER ( PARTITION BY AdmissionCSN ORDER BY AdmissionCSN ) ,
AdmissionCSN AS pat_enc_csn_id ,
peh.HSP_ACCOUNT_ID AS HAR,
LOS_days = DATEDIFF(DAY, f.HOSP_ADMSN_TIME, f.HOSP_DISCH_TIME),
f.HOSP_ADMSN_TIME,
f.HOSP_DISCH_TIME,
PAT_NAME,
PAT_MRN_ID,
VISIT_PATIENT_CLASS
FROM    RADB.dbo.CRD_IRTAT_CaseFact AS f
LEFT JOIN clarity.dbo.PAT_ENC_HSP AS peh ON f.AdmissionCSN=peh.PAT_ENC_CSN_ID
WHERE   f.HOSP_DISCH_TIME IS NOT NULL
AND VISIT_PATIENT_CLASS='Inpatient'
)	AS enc
WHERE enc.rid=1"
irtat<-sqlQuery(ch,qry)
summary(irtat)
losds=subset(tst,tst$VISIT_PATIENT_CLASS=="Inpatient")
median(irtat$LOS_days)
library(RODBC)
ch<-odbcConnect(dsn="Clarity")
qry<-"Select * from RADB.dbo.CRD_ERAS_Case_GHGI"
tst<-sqlQuery(ch,qry)
encqry<- "SELECT * FROM RADB.dbo.CRD_ERAS_EncDim_GHGI"
enc=sqlQuery(ch,encqry)
summary(tst)
hist(tst$LOS_days,freq=FALSE)
d=density(tst$LOS_days)
plot(d)
polygon(d,col="lightgray",border="gray")
rug(tst$LOS_days,col="red")
library(vioplot)
vioplot(tst$LOS_days, horizontal=TRUE, col="gray")
beanplot(tst$LOS_days)
library(beanplot)
beanplot(tst$LOS_days)
describeBy(tst$AttendingProvider)
library(psych)
describeBy(tst$AttendingProvider)
encqry<- "SELECT * FROM RADB.dbo.CRD_ERAS_EncDim_GHGI"
enc=sqlQuery(ch,encqry)
str(tst)
summary(tst)
